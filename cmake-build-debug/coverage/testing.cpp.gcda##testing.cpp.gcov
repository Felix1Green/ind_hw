        -:    0:Source:/home/felix/CLionProjects/park/ind_hw/test/testing.cpp
        -:    0:Graph:/home/felix/CLionProjects/park/ind_hw/cmake-build-debug/test/CMakeFiles/testing_tests.dir/testing.cpp.gcno
        -:    0:Data:/home/felix/CLionProjects/park/ind_hw/cmake-build-debug/test/CMakeFiles/testing_tests.dir/testing.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "gtest/gtest.h"
        -:    2:#define ERROR -1
        -:    3:#define SUCCESS 0
        -:    4:extern "C"{
        -:    5:#include "configure.h"
        -:    6:};
        -:    7:FILE* t;
        -:    8:
        -:    9:
        7:   10:TEST(QuickSort,ok){
        1:   10-block  0
        1:   10-block  1
        1:   10-block  2
        1:   10-block  3
        1:   10-block  4
    %%%%%:   10-block  5
    %%%%%:   10-block  6
    %%%%%:   10-block  7
        1:   10-block  8
        1:   10-block  9
        1:   10-block 10
        1:   10-block 11
        1:   10-block 12
    $$$$$:   10-block 13
        1:   10-block 14
        1:   10-block 15
        1:   10-block 16
        1:   10-block 17
        1:   11:    if (!(t = fopen(PATH_TO_SORT_TEST, "r")))
        1:   11-block  0
        1:   11-block  1
    #####:   12:        printf("\nFILE ERROR\n");
    $$$$$:   12-block  0
    $$$$$:   12-block  1
        1:   13:    int cnt = add(t);
        1:   13-block  0
        1:   14:    int size = filter(cnt);
        1:   14-block  0
        1:   15:    char* exp_str[5] ={(char*)"abs",(char*)"bc",(char*)"clion",(char*)"as",(char*)"root"};
        6:   16:    for(int i = 0; i < 5; i++){
        1:   16-block  0
        6:   16-block  1
        5:   16-block  2
        5:   17:        EXPECT_EQ(strcmp((fil_data+i)->name,exp_str[i]),0);
        5:   17-block  0
        5:   17-block  1
    $$$$$:   17-block  2
    $$$$$:   17-block  3
    $$$$$:   17-block  4
    $$$$$:   17-block  5
    $$$$$:   17-block  6
    $$$$$:   17-block  7
    $$$$$:   17-block  8
        5:   17-block  9
    %%%%%:   17-block 10
    %%%%%:   17-block 11
    %%%%%:   17-block 12
    %%%%%:   17-block 13
    %%%%%:   17-block 14
    %%%%%:   17-block 15
        -:   18:    }
        1:   19:    delete1(cnt);
        1:   19-block  0
        1:   20:    if(fil_data)
        1:   20-block  0
        1:   21:        free(fil_data);
        1:   21-block  0
        1:   22:}
        1:   22-block  0
        -:   23:
        7:   24:TEST(input_str,ok){
        1:   24-block  0
        1:   24-block  1
        1:   24-block  2
        1:   24-block  3
        1:   24-block  4
    %%%%%:   24-block  5
    %%%%%:   24-block  6
    %%%%%:   24-block  7
        1:   24-block  8
        1:   24-block  9
        1:   24-block 10
        1:   24-block 11
        1:   24-block 12
    $$$$$:   24-block 13
        1:   24-block 14
        1:   24-block 15
        1:   24-block 16
        1:   24-block 17
        1:   25:    if(!(t = fopen(PATH_TO_INPUT_TEST,"r")))
        1:   25-block  0
    #####:   26:        printf("\nFILE ERROR\n");
    $$$$$:   26-block  0
        1:   27:    char* ex_str = (char*)"hi,friend.";
        1:   28:    char* ans = input_str(t);
        1:   28-block  0
        1:   29:    EXPECT_EQ(strcmp(ans,ex_str),0);
        1:   29-block  0
    $$$$$:   29-block  1
    $$$$$:   29-block  2
    $$$$$:   29-block  3
    $$$$$:   29-block  4
    $$$$$:   29-block  5
    $$$$$:   29-block  6
    $$$$$:   29-block  7
        1:   29-block  8
    %%%%%:   29-block  9
    %%%%%:   29-block 10
    %%%%%:   29-block 11
    %%%%%:   29-block 12
    %%%%%:   29-block 13
        1:   30:    if(ans)free(ans);
        1:   30-block  0
        1:   30-block  1
        1:   31:}
        1:   31-block  0
        -:   32:
        -:   33:
        7:   34:TEST(input_int,not_ok){
        1:   34-block  0
        1:   34-block  1
        1:   34-block  2
        1:   34-block  3
        1:   34-block  4
    %%%%%:   34-block  5
    %%%%%:   34-block  6
    %%%%%:   34-block  7
        1:   34-block  8
        1:   34-block  9
        1:   34-block 10
        1:   34-block 11
        1:   34-block 12
    $$$$$:   34-block 13
        1:   34-block 14
        1:   34-block 15
        1:   34-block 16
        1:   34-block 17
        1:   35:    if(!(t = fopen(PATH_TO_INPUT_TEST,"r")))
        1:   35-block  0
    #####:   36:        printf("\nFILE ERROR\n");
    $$$$$:   36-block  0
        1:   37:    EXPECT_EQ(input_int(t),ERROR);
        1:   37-block  0
        1:   37-block  1
        1:   37-block  2
    $$$$$:   37-block  3
    $$$$$:   37-block  4
    $$$$$:   37-block  5
    $$$$$:   37-block  6
    $$$$$:   37-block  7
    $$$$$:   37-block  8
    $$$$$:   37-block  9
        1:   37-block 10
    %%%%%:   37-block 11
    %%%%%:   37-block 12
    %%%%%:   37-block 13
    %%%%%:   37-block 14
    %%%%%:   37-block 15
        1:   38:}
        1:   38-block  0
        -:   39:
        7:   40:TEST(input_int,ok){
        1:   40-block  0
        1:   40-block  1
        1:   40-block  2
        1:   40-block  3
        1:   40-block  4
    %%%%%:   40-block  5
    %%%%%:   40-block  6
    %%%%%:   40-block  7
        1:   40-block  8
        1:   40-block  9
        1:   40-block 10
        1:   40-block 11
        1:   40-block 12
    $$$$$:   40-block 13
        1:   40-block 14
        1:   40-block 15
        1:   40-block 16
        1:   40-block 17
        1:   41:    if(!(t = fopen(PATH_TO_INPUT_INT_TEST,"r")))
        1:   41-block  0
    #####:   42:        printf("\nFILE ERROR\n");
    $$$$$:   42-block  0
        1:   43:    EXPECT_EQ(input_int(t),15);
        1:   43-block  0
        1:   43-block  1
        1:   43-block  2
    $$$$$:   43-block  3
    $$$$$:   43-block  4
    $$$$$:   43-block  5
    $$$$$:   43-block  6
    $$$$$:   43-block  7
    $$$$$:   43-block  8
    $$$$$:   43-block  9
        1:   43-block 10
    %%%%%:   43-block 11
    %%%%%:   43-block 12
    %%%%%:   43-block 13
    %%%%%:   43-block 14
    %%%%%:   43-block 15
        1:   44:}
        1:   44-block  0
        -:   45:
        7:   46:TEST(input_date,ok){
        1:   46-block  0
        1:   46-block  1
        1:   46-block  2
        1:   46-block  3
        1:   46-block  4
    %%%%%:   46-block  5
    %%%%%:   46-block  6
    %%%%%:   46-block  7
        1:   46-block  8
        1:   46-block  9
        1:   46-block 10
        1:   46-block 11
        1:   46-block 12
    $$$$$:   46-block 13
        1:   46-block 14
        1:   46-block 15
        1:   46-block 16
        1:   46-block 17
        1:   47:    if(!(t = fopen(PATH_TO_INPUT_DATE,"r")))
        1:   47-block  0
        1:   47-block  1
    #####:   48:        printf("\nFILE ERROR\n");
    $$$$$:   48-block  0
    $$$$$:   48-block  1
        1:   49:    int a[3] = {12,5,2019};
        1:   50:    int* res = input_date(t);
        1:   50-block  0
        1:   51:    EXPECT_EQ(res[0],a[0]);
        1:   51-block  0
        1:   51-block  1
    $$$$$:   51-block  2
    $$$$$:   51-block  3
    $$$$$:   51-block  4
    $$$$$:   51-block  5
    $$$$$:   51-block  6
    $$$$$:   51-block  7
    $$$$$:   51-block  8
        1:   51-block  9
    %%%%%:   51-block 10
    %%%%%:   51-block 11
    %%%%%:   51-block 12
    %%%%%:   51-block 13
        1:   52:    EXPECT_EQ(res[1],a[1]);
        1:   52-block  0
        1:   52-block  1
    $$$$$:   52-block  2
    $$$$$:   52-block  3
    $$$$$:   52-block  4
    $$$$$:   52-block  5
    $$$$$:   52-block  6
    $$$$$:   52-block  7
    $$$$$:   52-block  8
        1:   52-block  9
    %%%%%:   52-block 10
    %%%%%:   52-block 11
    %%%%%:   52-block 12
    %%%%%:   52-block 13
        1:   53:    EXPECT_EQ(res[2],a[2]);
        1:   53-block  0
        1:   53-block  1
    $$$$$:   53-block  2
    $$$$$:   53-block  3
    $$$$$:   53-block  4
    $$$$$:   53-block  5
    $$$$$:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
        1:   53-block  9
    %%%%%:   53-block 10
    %%%%%:   53-block 11
    %%%%%:   53-block 12
    %%%%%:   53-block 13
        1:   54:    if(res)free(res);
        1:   54-block  0
        1:   54-block  1
        1:   55:}
        1:   55-block  0
        -:   56:
        7:   57:TEST(print,not_ok){
        1:   57-block  0
        1:   57-block  1
        1:   57-block  2
        1:   57-block  3
        1:   57-block  4
    %%%%%:   57-block  5
    %%%%%:   57-block  6
    %%%%%:   57-block  7
        1:   57-block  8
        1:   57-block  9
        1:   57-block 10
        1:   57-block 11
        1:   57-block 12
    $$$$$:   57-block 13
        1:   57-block 14
        1:   57-block 15
        1:   57-block 16
        1:   57-block 17
        1:   58:    fil_data = NULL;
        1:   59:    EXPECT_EQ(print(0),ERROR);
        1:   59-block  0
        1:   59-block  1
        1:   59-block  2
    $$$$$:   59-block  3
    $$$$$:   59-block  4
    $$$$$:   59-block  5
    $$$$$:   59-block  6
    $$$$$:   59-block  7
    $$$$$:   59-block  8
    $$$$$:   59-block  9
        1:   59-block 10
    %%%%%:   59-block 11
    %%%%%:   59-block 12
    %%%%%:   59-block 13
    %%%%%:   59-block 14
    %%%%%:   59-block 15
        1:   60:}
        1:   60-block  0
        -:   61:
        7:   62:TEST(print,ok){
        1:   62-block  0
        1:   62-block  1
        1:   62-block  2
        1:   62-block  3
        1:   62-block  4
    %%%%%:   62-block  5
    %%%%%:   62-block  6
    %%%%%:   62-block  7
        1:   62-block  8
        1:   62-block  9
        1:   62-block 10
        1:   62-block 11
        1:   62-block 12
    $$$$$:   62-block 13
        1:   62-block 14
        1:   62-block 15
        1:   62-block 16
        1:   62-block 17
        1:   63:    if(!(t = fopen(PATH_TO_SORT_TEST,"r")))
        1:   63-block  0
    #####:   64:        printf("\nFILE ERROR\n");
    $$$$$:   64-block  0
        1:   65:    int cnt = add(t);
        1:   65-block  0
        1:   66:    int size = filter(cnt);
        1:   67:    EXPECT_EQ(print(size),SUCCESS);
        1:   67-block  0
        1:   67-block  1
    $$$$$:   67-block  2
    $$$$$:   67-block  3
    $$$$$:   67-block  4
    $$$$$:   67-block  5
    $$$$$:   67-block  6
    $$$$$:   67-block  7
    $$$$$:   67-block  8
        1:   67-block  9
    %%%%%:   67-block 10
    %%%%%:   67-block 11
    %%%%%:   67-block 12
    %%%%%:   67-block 13
    %%%%%:   67-block 14
        1:   68:    delete1(cnt);
        1:   68-block  0
        1:   69:    if(fil_data)
        1:   70:        free(fil_data);
        1:   70-block  0
        1:   71:}
        1:   71-block  0
        -:   72:
        7:   73:TEST(add,ok){
        1:   73-block  0
        1:   73-block  1
        1:   73-block  2
        1:   73-block  3
        1:   73-block  4
    %%%%%:   73-block  5
    %%%%%:   73-block  6
    %%%%%:   73-block  7
        1:   73-block  8
        1:   73-block  9
        1:   73-block 10
        1:   73-block 11
        1:   73-block 12
    $$$$$:   73-block 13
        1:   73-block 14
        1:   73-block 15
        1:   73-block 16
        1:   73-block 17
        1:   74:    if(!(t = fopen(PATH_TO_SORT_TEST,"r")))
        1:   74-block  0
        1:   74-block  1
    #####:   75:        printf("\nFILE ERROR\n");
    $$$$$:   75-block  0
    $$$$$:   75-block  1
        1:   76:    int cnt = add(t);
        1:   76-block  0
        1:   77:    EXPECT_EQ(cnt,5);
        1:   77-block  0
        1:   77-block  1
    $$$$$:   77-block  2
    $$$$$:   77-block  3
    $$$$$:   77-block  4
    $$$$$:   77-block  5
    $$$$$:   77-block  6
    $$$$$:   77-block  7
    $$$$$:   77-block  8
        1:   77-block  9
    %%%%%:   77-block 10
    %%%%%:   77-block 11
    %%%%%:   77-block 12
    %%%%%:   77-block 13
    %%%%%:   77-block 14
        1:   78:    delete1(cnt);
        1:   78-block  0
        1:   79:}
        1:   79-block  0
        -:   80:
        7:   81:TEST(add,not_ok){
        1:   81-block  0
        1:   81-block  1
        1:   81-block  2
        1:   81-block  3
        1:   81-block  4
    %%%%%:   81-block  5
    %%%%%:   81-block  6
    %%%%%:   81-block  7
        1:   81-block  8
        1:   81-block  9
        1:   81-block 10
        1:   81-block 11
        1:   81-block 12
    $$$$$:   81-block 13
        1:   81-block 14
        1:   81-block 15
        1:   81-block 16
        1:   81-block 17
        1:   82:    if(!(t = fopen(PATH_TO_ADD_TEST,"r")))
        1:   82-block  0
        1:   82-block  1
    #####:   83:        printf("\nFILE ERROR\n");
    $$$$$:   83-block  0
    $$$$$:   83-block  1
        1:   84:    int cnt = add(t);
        1:   84-block  0
        1:   85:    EXPECT_EQ(cnt,4);
        1:   85-block  0
        1:   85-block  1
    $$$$$:   85-block  2
    $$$$$:   85-block  3
    $$$$$:   85-block  4
    $$$$$:   85-block  5
    $$$$$:   85-block  6
    $$$$$:   85-block  7
    $$$$$:   85-block  8
        1:   85-block  9
    %%%%%:   85-block 10
    %%%%%:   85-block 11
    %%%%%:   85-block 12
    %%%%%:   85-block 13
    %%%%%:   85-block 14
        1:   86:    delete1(cnt);
        1:   86-block  0
        1:   87:}
        1:   87-block  0
        -:   88:
        7:   89:TEST(filter,not_ok){
        1:   89-block  0
        1:   89-block  1
        1:   89-block  2
        1:   89-block  3
        1:   89-block  4
    %%%%%:   89-block  5
    %%%%%:   89-block  6
    %%%%%:   89-block  7
        1:   89-block  8
        1:   89-block  9
        1:   89-block 10
        1:   89-block 11
        1:   89-block 12
    $$$$$:   89-block 13
        1:   89-block 14
        1:   89-block 15
        1:   89-block 16
        1:   89-block 17
        1:   90:    data = NULL;
        1:   91:    EXPECT_EQ(filter(0),ERROR);
        1:   91-block  0
        1:   91-block  1
        1:   91-block  2
    $$$$$:   91-block  3
    $$$$$:   91-block  4
    $$$$$:   91-block  5
    $$$$$:   91-block  6
    $$$$$:   91-block  7
    $$$$$:   91-block  8
    $$$$$:   91-block  9
        1:   91-block 10
    %%%%%:   91-block 11
    %%%%%:   91-block 12
    %%%%%:   91-block 13
    %%%%%:   91-block 14
    %%%%%:   91-block 15
        1:   92:}
        1:   92-block  0
        -:   93:
        7:   94:TEST(filter,ok){
        1:   94-block  0
        1:   94-block  1
        1:   94-block  2
        1:   94-block  3
        1:   94-block  4
    %%%%%:   94-block  5
    %%%%%:   94-block  6
    %%%%%:   94-block  7
        1:   94-block  8
        1:   94-block  9
        1:   94-block 10
        1:   94-block 11
        1:   94-block 12
    $$$$$:   94-block 13
        1:   94-block 14
        1:   94-block 15
        1:   94-block 16
        1:   94-block 17
        1:   95:    if(!(t = fopen(PATH_TO_SORT_TEST,"r")))
        1:   95-block  0
    #####:   96:        printf("\nFILE ERROR\n");
    $$$$$:   96-block  0
        1:   97:    data = NULL;
        1:   98:    int cnt = add(t);
        1:   98-block  0
        1:   99:    EXPECT_EQ(filter(cnt),5);
        1:   99-block  0
        1:   99-block  1
    $$$$$:   99-block  2
    $$$$$:   99-block  3
    $$$$$:   99-block  4
    $$$$$:   99-block  5
    $$$$$:   99-block  6
    $$$$$:   99-block  7
    $$$$$:   99-block  8
        1:   99-block  9
    %%%%%:   99-block 10
    %%%%%:   99-block 11
    %%%%%:   99-block 12
    %%%%%:   99-block 13
    %%%%%:   99-block 14
        1:  100:    delete1(cnt);
        1:  100-block  0
        1:  101:    if(fil_data)free(fil_data);
        1:  101-block  0
        1:  102:}
        1:  102-block  0
        -:  103:
        7:  104:TEST(delete1,ok){
        1:  104-block  0
        1:  104-block  1
        1:  104-block  2
        1:  104-block  3
        1:  104-block  4
    %%%%%:  104-block  5
    %%%%%:  104-block  6
    %%%%%:  104-block  7
        1:  104-block  8
        1:  104-block  9
        1:  104-block 10
        1:  104-block 11
        1:  104-block 12
    $$$$$:  104-block 13
        1:  104-block 14
        1:  104-block 15
        1:  104-block 16
        1:  104-block 17
        1:  105:    if(!(t = fopen(PATH_TO_SORT_TEST,"r")))
        1:  105-block  0
    #####:  106:        printf("\nFILE ERROR\n");
    $$$$$:  106-block  0
        1:  107:    data = NULL;
        1:  108:    int cnt = add(t);
        1:  108-block  0
        1:  109:    EXPECT_EQ(delete1(cnt),SUCCESS);
        1:  109-block  0
        1:  109-block  1
    $$$$$:  109-block  2
    $$$$$:  109-block  3
    $$$$$:  109-block  4
    $$$$$:  109-block  5
    $$$$$:  109-block  6
    $$$$$:  109-block  7
    $$$$$:  109-block  8
        1:  109-block  9
    %%%%%:  109-block 10
    %%%%%:  109-block 11
    %%%%%:  109-block 12
    %%%%%:  109-block 13
    %%%%%:  109-block 14
        1:  110:}
        1:  110-block  0
        -:  111:
        7:  112:TEST(delete1,not_ok){
        1:  112-block  0
        1:  112-block  1
        1:  112-block  2
        1:  112-block  3
        1:  112-block  4
    %%%%%:  112-block  5
    %%%%%:  112-block  6
    %%%%%:  112-block  7
        1:  112-block  8
        1:  112-block  9
        1:  112-block 10
        1:  112-block 11
        1:  112-block 12
    $$$$$:  112-block 13
        1:  112-block 14
        1:  112-block 15
        1:  112-block 16
        1:  112-block 17
        1:  113:    data = NULL;
        1:  114:    EXPECT_EQ(delete1(0),ERROR);
        1:  114-block  0
        1:  114-block  1
        1:  114-block  2
    $$$$$:  114-block  3
    $$$$$:  114-block  4
    $$$$$:  114-block  5
    $$$$$:  114-block  6
    $$$$$:  114-block  7
    $$$$$:  114-block  8
    $$$$$:  114-block  9
        1:  114-block 10
    %%%%%:  114-block 11
    %%%%%:  114-block 12
    %%%%%:  114-block 13
    %%%%%:  114-block 14
    %%%%%:  114-block 15
        5:  115:}
        1:  115-block  0
        1:  115-block  1
        1:  115-block  2
        1:  115-block  3
        1:  115-block  4
        1:  115-block  5
        1:  115-block  6
